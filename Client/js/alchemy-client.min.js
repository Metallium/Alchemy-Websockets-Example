(function(){function b(a){if(!this instanceof b)return new b(a);else{a||(a={});this._options=e(this._defaultOptions,a);if(!a.SocketType&&Modernizr)if(Modernizr.websockets)this.SocketType=b.prototype.SocketTypes.WebSocket;else if(!Modernizr.websockets&&window.WebSocket)this.SocketType=b.prototype.SocketTypes.FlashSocket;if(!window.WebSocket)throw"UNSUPPORTED: Websockets are not supported in this browser!";this.SocketState=b.prototype.SocketStates.Closed;this.Connected=this._options.Connected;this.Disconnected=
this._options.Disconnected;this.MessageReceived=this._options.MessageReceived}}function e(a,c){var b={},d={};for(d in a)b[d]=a[d];for(d in c)b[d]=c[d];return b}b.prototype={_socket:{},_heartbeat:{},_lastReceive:(new Date).getTime(),_options:{},SocketStates:{Connecting:0,Open:1,Closing:2,Closed:3},SocketState:3,SocketTypes:{WebSocket:"websocket",FlashSocket:"flashsocket"},Start:function(){var a="ws://"+this._options.Server+":"+this._options.Port+"/"+this._options.Action+"/"+this._options.SocketType,
c=this;this._socket=new WebSocket(a);this._socket.onopen=function(){c._OnOpen()};this._socket.onmessage=function(a){c._OnMessage(a)};this._socket.onclose=function(){c._OnClose()};this.SocketState=b.prototype.SocketStates.Connecting;this._options.DebugMode&&console.log("Server started, connecting to "+a)},Send:function(a){typeof a==="object"&&(a=JSON.stringify(a));this._socket.send(a);this._options.DebugMode&&console.log("Sent data to server: "+a)},Stop:function(){this._socket.close();this._options.DebugMode&&
console.log("Closed connection.")},Connected:function(){},Disconnected:function(){},MessageReceived:function(){},_OnOpen:function(){var a=this;window.clearTimeout(a._heartbeat);this._heartbeat=window.setTimeout(function(){a._HeartBeat()},a._options.Heartbeat*1E3);this.SocketState=b.prototype.SocketStates.Open;this._options.DebugMode&&console.log("Connected, hearbeat started (every "+this._options.Heartbeat+" seconds).");this.Connected()},_OnMessage:function(a){var b=this;a.data===this._options.HeartbeatPackage?
(window.clearTimeout(b._heartbeat),this._heartbeat=window.setTimeout(function(){b._HeartBeat()},b._options.Heartbeat*1E3)):(this._lastReceive=(new Date).getTime(),this._options.DebugMode&&console.log("Message received: "+JSON.stringify(a.data)),this.MessageReceived(a))},_OnClose:function(){this._options.DebugMode&&console.log("Connection closed. Heartbeat stopped.");window.clearTimeout(this._heartbeat);this.SocketState=b.prototype.SocketStates.Closed;this.Disconnected()},_HeartBeat:function(){var a=
this;if(this._socket.readyState!==void 0&&this._socket.readyState===1){var b=(new Date).getTime()-this._lastReceive;this._options.DebugMode&&console.log("Heartbeat fired. It's been "+b+"ms since the last one.");b>=this._options.Heartbeat*1E3&&this._socket.send(a._options.HeartbeatPackage)}window.clearTimeout(a._heartbeat);this._heartbeat=window.setTimeout(function(){a._HeartBeat()},a._options.Heartbeat*1E3)}};b.prototype._defaultOptions={Port:81,Heartbeat:25,HeartbeatPackage:"7",Server:"",Action:"",
SocketType:b.prototype.SocketTypes.WebSocket,Connected:function(){},Disconnected:function(){},MessageReceived:function(){},DebugMode:!1};window.Alchemy=b;window.MergeDefaults=e})(window);